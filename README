urk 0.-1.4
http://urk.sourceforge.net/


Overview:

urk is an IRC client written purely in python for linux/gnome. It has a built-in
scripting system (also python), which is used to implement much of the client.


Requirements/User installation:

urk requires the following packages (and should run on any os that can provide 
them):
-python version 2.4 or greater (www.python.org)
-pygtk 2.6 or greater (www.pygtk.org)

Because urk is pure python, no compilation of urk is required. Just extract the 
source to somewhere and run 'python urk.py'.


Windows users:

urk was designed for linux, but it happens nearly everything we used is
cross-platform so..yeah..it runs on windows. You need to install some things:

-python version 2.4 or greater from www.python.org
-pygtk 2.6 or greater from http://www.pcpm.ucl.ac.be/~gustin/win32_ports/
-gtk+ runtime for windows from http://gladewin32.sourceforge.net/

It's very important that you get the win32 runtime for gtk+ from the site given.
Installers from other places, including the gaim gtk+ installer, have failed. 
Also, you'll need to restart after you've installed those things.

Repeat: THE GTK+ RUNTIME PROVIDED WITH GAIM WILL NOT WORK.


Getting started:

Make sure you have all the requirements, go to the directory where you have
extracted the source, and type 'python urk.py'.

We don't have any preferences windows yet. You can change your nickname by
typing '/nick nickname' (replacing nickname with the nick you want to use)
or typing a new nick in the nick field on the lower right corner and pressing 
enter.

To connect, type '/server irc.gamesurge.net' (replacing irc.gamesurge.net with 
the server you want to connect to).

If you want to connect to another server (without disconnecting the current
one), use the -m switch as in '/server -m irc.gamesurge.net'.

To join a channel when you're connected to a server, type '/join #channelname',
replacing #channelname with the channel you want to join.

urk currently only supports the bare minimum commands and features you should
need to connect and chat normally. On channels, you can send messages by
typing them (if you want to send a message that starts with a /, use /say to
send your message). You can send actions to channels with /me and send messages
to arbitrary targets with /msg. If urk does not recognize a command, it will
send it to the server. This works to implement most commands you would expect
on an irc client.


Configuration:

Most configuration has to be done manually. If urk is running, you can configure
it using commands. You can also edit urk.conf, which you can locate by typing
'/pyeval __main__.userpath' in urk.

To set a value in urk, type

/pyexec conf['setting'] = value

To see the current value, type

/pyeval conf['setting']

Setting:            Description:

'nick'              The nickname urk should use. Defaults to None (if this is
    set to None, urk tries to get a username from the os)

'start_networks'    The networks/servers urk should connect to at startup. 
    Defaults to []

'perform/NETWORK'   A list of commands to perform on connecting to NETWORK.
    Defaults to []

'ui-gtk/tab-pos'    The side of the window where the tabs will reside
    2 for top (default)
    0 for left
    1 for right
    3 for bottom

'ui-gtk/tab-margin' The number of pixels of empty space around the edges of the
    window. Defaults to 10

'command_prefix'    The prefix used to signal a command. Defaults to '/'


System-wide installation:

Not yet implemented.


About scripting:

urk scripts are python modules that contain definitions of functions with 
certain "magic" names, like onText (for when someone sends a channel or private 
message). See www.python.org for help on writing python code. The format for 
onText is:

def onText(event):
    code

event is an object used to pass on the various information relating to the
event that triggered the function.

event.source is the nickname of the person who sent the message.

event.target is the nickname or channel that received the message.

event.text is the text of the message.

event.network is an object representing the network where the message was sent.

event.window is a window that seems to be related to the event and some 
unspecified reason. It could be the status window, a channel, window, a query,
anything.

Complete documentation doesn't exist yet. You'll have to use the actual source
files. Sorry. theme.py is good for finding event names.

Alternatively, you can bug the authors for help if no documentation exists. This
will motivate us to create it.


Bugs/Feedback:

Naturally, feedback of any sort is welcome. Of course we want to know about
bugs. In particular, we'd also like to hear about any features you want or
expect in an irc client that urk doesn't have. While we'd like to limit the
things that go in the default client (a notify list, for example, is something
we'd want to see as an external script, not as part of the default setup, and
something we're not likely to implement soon), there are probably a lot of 
little things that we may have skipped over because we don't use them or have 
become used to not having them.
