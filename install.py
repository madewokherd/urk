import os
import shutil

install_path = os.curdir
bin_path = os.curdir
dirs_to_install = []
files_to_install = []
exclude_dirs = ['CVS','NSIS','profile']
exclude_files = ['install.py','urk.desktop']

nsis_outfile="urk.exe"

def identify_files(path=os.curdir, prefix=''):
    #set files to a list of the files we want to install
    print "Searching for files to install"
    for filename in os.listdir(path):
        abs_file = os.path.join(path,filename)
        rel_file = os.path.join(prefix,filename)
        if os.path.isfile(abs_file) and filename not in exclude_files:
            print "Marking file %s for installation" % rel_file
            files_to_install.append(rel_file)
        elif os.path.isdir(abs_file) and filename not in exclude_dirs:
            print "Marking directory %s for installation" % rel_file
            dirs_to_install.append(rel_file)
            identify_files(abs_file, rel_file)

def install_files():
    #copy .py files to the destination directory
    print "Installing files to %s" % install_path
    for dirname in dirs_to_install:
        dest = os.path.join(install_path,dirname)
        if os.access(dest,os.X_OK):
            print "Found directory %s" % dest
        else:
            print "Creating new directory %s" % dest
            os.mkdir(dest,0755)
    for filename in files_to_install:
        source = os.path.join(os.curdir,filename)
        dest = os.path.join(install_path,filename)
        print "Copying %s to %s" % (source, dest)
        shutil.copy(source, dest)

def nsis_generate_script():
    filename = os.path.join(install_dir,"urk.nsi")
    f = file(filename,'w')
    f.write(
"""
; This file was automatically generated by urk's install.py. Don't
; even bother to modify it.

Name "urk"

OutFile "intaller.exe"

InstallDir $PROGRAMFILES\urk

InstallDirRegKey HKLM "Software\urk" "Install_Dir"


; Page components
Page directory
Page instfiles

UninstPage uninstConfirm
UninstPage instfiles


""")
